{"name": "test_readbooking_tc10", "status": "failed", "statusDetails": {"message": "AssertionError: Status code invalid...", "trace": "self = <tests.Integration_Test.test_CRUDToken.Testbooking object at 0x000002850807A690>\n\n    @pytest.mark.negative\n    def test_readbooking_tc10(self, ):\n        id = Testbooking.test_createbooking_tc2(self)\n        fullurl = baseURL() + str(id)\n        res, data = get_req(url=fullurl, auth=None, header=json_headers())\n    \n>       statuscode(res.status_code, 400)\n\ntests\\Integration_Test\\test_CRUDToken.py:169: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nexp = 200, act = 400\n\n    def statuscode(exp,act):\n>       assert exp==act, \"Status code invalid...\"\nE       AssertionError: Status code invalid...\n\nsrc\\helpers\\verify.py:3: AssertionError"}, "start": 1702797810315, "stop": 1702797818515, "uuid": "067000a4-b5df-4f58-bc77-091852608915", "historyId": "a789115f576fe1e344c8a95f747b5258", "testCaseId": "a789115f576fe1e344c8a95f747b5258", "fullName": "tests.Integration_Test.test_CRUDToken.Testbooking#test_readbooking_tc10", "labels": [{"name": "tag", "value": "negative"}, {"name": "parentSuite", "value": "tests.Integration_Test"}, {"name": "suite", "value": "test_CRUDToken"}, {"name": "subSuite", "value": "Testbooking"}, {"name": "host", "value": "Akshay"}, {"name": "thread", "value": "17804-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.Integration_Test.test_CRUDToken"}]}